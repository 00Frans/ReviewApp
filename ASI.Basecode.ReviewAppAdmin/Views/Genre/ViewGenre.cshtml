@model ASI.Basecode.Services.ServiceModels.GenreViewModel
@{
    var Books = (ASI.Basecode.Services.ServiceModels.BookViewModel)ViewData["Books"];
}
@section styles {
    <link rel="stylesheet" href="~/css/genre.css" />
}
@{
    ViewData["Title"] = "Genre Details";
}
<div class="mt-5">
    <a asp-action="List" asp-controller="genre" class="btn btn-primary back">< Back</a>
</div>
<div class="row">
    <div class="col-6 editform">
        <div class="detaillabel">
            <h2>GENRE DETAILS.</h2>
        </div>
        <div class="form-group">
            <label>Genre ID</label>
            <input class="form-control" asp-for="GenreId" value="@Model.GenreId">
        </div>
        <div class="form-group">
            <label>Genre Name</label>
            <input class="form-control" asp-for="GenreName" value="@Model.GenreName" />
        </div>

    </div>
    <div class="col-6 editform1">
        <div class="form-group" style="margin-left:45%;">
            <a asp-controller="Genre" asp-action="EditGenre" class="edit btn btn-primary">
                <i class="bi bi-pencil-square icon"></i> Edit Genre
            </a>
            <button type="button" data-toggle="modal" data-target="#deleteModal" class="btn btn-primary">
                <i class="bi bi-trash icon-gradient"></i>
            </button>
        </div>
        <div class="form-group">
            <label>Created By</label>
            <input class="form-control" value="@Model.GenreCreatedBy">
        </div>
        <div class="form-group">
            <label>Time Created</label>
            <input class="form-control" value="@Model.DateAdded" />
        </div>
        <div class="form-group">
            <label>Updated By</label>
            <input class="form-control" value="@Model.UpdatedBy" />
        </div>
        <div class="form-group">
            <label>Time Updated</label>
            <input class="form-control" value="@Model.UpdatedDate" />
        </div>
    </div>
</div>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(1 == Books.Page ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("ViewGenre", new { GenreId = Model.GenreId, page = Books.Page - 1, pageSize = Books.PageSize })" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        @if (Books.TotalPages > 1)
        {
            <li class="page-item @(1 == Books.Page ? "active" : "")">
                <a class="page-link" href="@Url.Action("ViewGenre", new { GenreId = Model.GenreId, page = 1, pageSize = Books.PageSize })">1</a>
            </li>

            @for (int i = Math.Max(2, Books.Page - 1); i <= Math.Min(Books.TotalPages - 1, Books.Page + 1); i++)
            {
                <li class="page-item @(i == Books.Page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("ViewGenre", new { GenreId = Model.GenreId, page = i, pageSize = Books.PageSize })">@i</a>
                </li>
            }

            <li class="page-item @(Books.TotalPages == Books.Page ? "active" : "")">
                <a class="page-link" href="@Url.Action("ViewGenre", new { GenreId = Model.GenreId, page = Books.TotalPages, pageSize = Books.PageSize })">@Books.TotalPages</a>
            </li>
        }

        <li class="page-item @(Books.TotalPages == Books.Page ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("ViewGenre", new { GenreId = Model.GenreId, page = Books.Page + 1, pageSize = Books.PageSize })" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>